<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 
		root-context.xml 파일은 서버 구동 시 web.xml을 거쳐 바로 로딩(pre-loading) 되는 설정 파일
		=> 서버 구동 시 바로 세팅해야되는 내용을 작성하는 설정 파일 
		   ( 보통 DB연결 설정, 트랜잭션 처리, AOP관련, 내외부 모듈 연동 관련 등등 ) 
		   
	 -->
	 
	 <!-- xml 방식의 bean 등록 방법 -->
	 <bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	 	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
	 	<property name="username" value="spring" />
	 	<property name="password" value="spring" />
	 </bean>
	 
	 <!-- 
	 	BasicDataSource dataSource = new BasicDataSource();
	 	dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
	 	dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
	 	dataSource.setUsername("spring");
	 	dataSource.setPassword("spring");
	  -->
	  
	  <!-- sqlSession과 같은 객체 등록 -->
	  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  	<property name="configLocation" value="classpath:mybatis-config.xml" />
	  	<property name="dataSource" ref="dataSource" />
	  	
	  </bean>
	  
	  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionTemplate">
	  	<constructor-arg ref="sqlSessionFactory" />
	  </bean>
	  <!-- 
	  	SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
	  	sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml");
	  	sqlSessionFactory.setDataSource(dataSource);
	   -->
	  
</beans>
